DROP SEQUENCE ACCOUNT_SEQ;
DROP SEQUENCE TASK_SEQ;
DROP SEQUENCE NOTIFICATION_SEQ;

CREATE SEQUENCE ACCOUNT_SEQ
START WITH 1
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 50
NOCACHE
NOCYCLE;

CREATE SEQUENCE TASK_SEQ
START WITH 1
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 50
NOCACHE
NOCYCLE;

CREATE SEQUENCE NOTIFICATION_SEQ
START WITH 1
MINVALUE 1
MAXVALUE 9999999999999999999999999999
INCREMENT BY 50
NOCACHE
NOCYCLE;

CREATE TABLE ACCOUNT (
  ID NUMBER(10) PRIMARY KEY,
  VK_KEY NUMBER(20) UNIQUE,
  TELEGRAM_KEY NUMBER(20) UNIQUE
);

CREATE TABLE TASK (
  ID NUMBER(10) PRIMARY KEY,
  TITLE VARCHAR2(60),
  BODY VARCHAR2(140) NOT NULL,
  ACCOUNT_ID NUMBER(10) NOT NULL REFERENCES ACCOUNT(ID),
  CLIENT_DATE DATE NOT NULL,
  SERVER_DATE DATE NOT NULL
);

CREATE TABLE NOTIFICATION (
  ID NUMBER(10) PRIMARY KEY,
  CLIENT_DATE DATE NOT NULL,
  SERVER_DATE DATE NOT NULL,
  TASK_ID NUMBER(10) NOT NULL REFERENCES TASK(ID)
);

CREATE OR REPLACE TRIGGER account_create_trigger
BEFORE INSERT ON ACCOUNT
FOR EACH ROW
  BEGIN
    SELECT ACCOUNT_SEQ.NEXTVAL
    INTO :new.ID
    FROM dual;
  END;

CREATE OR REPLACE TRIGGER task_create_trigger
BEFORE INSERT ON TASK
FOR EACH ROW
  BEGIN
    SELECT TASK_SEQ.NEXTVAL
    INTO :new.ID
    FROM dual;
  END;

CREATE OR REPLACE TRIGGER notification_create_trigger
BEFORE INSERT ON NOTIFICATION
FOR EACH ROW
  BEGIN
    SELECT NOTIFICATION_SEQ.NEXTVAL
    INTO :new.ID
    FROM dual;
  END;